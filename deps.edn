{


 ;; Needed by `:ext/depstart`.
 ;;
 :paths
 []




 :maestro/doc

 {:namespace {"bundle"  "Alias bundling a group of aliases"
              "dev"     "Alias bringing what is needed for developping a related project"
              "ext"     "External dependencies"
              "project" "Project or subproject located in './project' directory"
              "task"    "Meant to be used in Babashka tasks"
              "test"    "Alias bringing what is needed for testing a related project"
              "toggle"  "Alias toggling some actions in `user` namespace (see file './dev/user'"}}




 :aliases
 {


  ;; EXTERNAL DEPENDENCIES


  :ext/criterium

  {:extra-deps  {criterium/criterium {:mvn/version "0.4.6"}}
   :maestro/doc "Benchmarking"}


  :ext/convex

  {:extra-deps {world.convex/convex {:local/root #_"cvm/hack.jar"
                                                 "cvm/e7470befd81e9f6a8dbb14b053162b3e4750bb11.jar"}}
   :maestro/doc "Java implementation of the CVM and related utilities"}


  :ext/deploy

  {:replace-deps {slipset/deps-deploy {:mvn/version "0.1.5"}}
   :maestro/doc  "Installation and deployment"}


  :ext/depstar

  {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.1.245"}}
   :maestro/doc  "Packaging jars and uberjars"}


  :ext/hawk

  {:extra-deps  {hawk/hawk {:mvn/version "0.2.11"}}
   :maestro/doc "File watching"}


  :ext/kaocha

  {:extra-deps  {lambdaisland/kaocha {:mvn/version "1.0.829"}}
   :maestro/doc "Testing framework"}


  :ext/mprop

  {:extra-deps  {io.helins/mprop {:mvn/version "0.0.1"}}
   :maestro/doc "Improves writing complex generative tests with `ext/test.check`."}


  :ext/test.check

  {:extra-deps  {org.clojure/test.check {:mvn/version "1.1.0"}}
   :maestro/doc "Writing generative tests and generators for internal libraries"}


  :ext/tools.cli

  {:extra-deps  {org.clojure/tools.cli {:mvn/version "1.0.206"}}
   :maestro/doc "Parsing command-line arguments in apps"}


  :ext/tools.reader

  {:extra-deps  {org.clojure/tools.reader {:mvn/version "1.3.4"}}
   :maestro/doc "Reading Convex data as EDN"}




  ;; FOR TASKS


  :task/dev

  {:extra-paths     ["dev"]
   :maestro/doc     "Mandatory alias for development"
   :maestro/env     {"CONVEX_DEV" "true"}
   :maestro/require [:ext/criterium
                     :ext/tools.reader]}


  :task/jar

  {:exec-args       {:sync-pom true}
   :exec-fn         hf.depstar/jar
   :maestro/doc     "Setup for creating jar files"
   :maestro/require [:ext/depstar]}


  :task/no-main

  {:main-opts   []
   :maestro/doc "Remove any CLI argument provides by a previous alias"}


  :task/test

  {:main-opts       ["-m"            "kaocha.runner"
                     "--config-file" "kaocha.edn"]
   :maestro/doc     "Mandatory alias for testing"
   :maestro/require [:ext/kaocha
                     :ext/mprop]}

  :task/uberjar

  {:exec-args       {:aot      true
                     :sync-pom true}
   :exec-fn         hf.depstar/uberjar
   :maestro/doc     "Setup for creating uberjar files"
   :maestro/require [:ext/depstar]}




  ;; BUNDLES OF ALIASES


  :bundle/deploy

  {:maestro/doc     "Bundles aliases needed when developping Convex Lisp libraries"
   :maestro/require [:project/clojurify
                     :project/cvm
                     :project/watch]}




  ;; TOGGLES


  :toggle/tap

  {:maestro/doc "Toggles printing to terminal on `tap>` in `user` namespace"
   :maestro/env {"CONVEX_TAP" "true"}}




  ;; GOD MODE
  

  :project/all

  {:extra-paths     ["project/all/src/clj/dev"]
   :maestro/dev     [:project/all]
   :maestro/doc     "Dev environment requiring all useful namespaces from this repository"
   :maestro/require [:ext/hawk
                     :ext/test.check
                     :project/app.fuzz
                     :project/app.run
                     :project/break
                     :project/cvm
                     :project/clojurify
                     :project/deploy.lab.lib.xform
                     :project/deploy.lib.trust
                     :project/run
                     :project/sync
                     :project/watch]
   :maestro/root    "project/all"}




  ;; PROJECTS


  :project/app.fuzz

  {:exec-args       {:max-size 200
                     :root     "report/fuzz"}
   :exec-fn         convex.app.fuzz/random
   :extra-paths     ["project/app/fuzz/src/clj/main"]
   :maestro/doc     "Run fuzzy tests against the CVM"
   :maestro/require [:ext/test.check
                     :project/break
                     :project/cvm
                     :project/clojurify
                     :toggle/tap]
   :maestro/root    "project/app/fuzz"}


  :dev/app.fuzz

  {:extra-paths ["project/app/fuzz/src/clj/dev"]}

  ;---

  :project/app.run

  {:extra-paths        ["project/app/run/src/clj/main"]
   :maestro/doc        "Convex Lisp Runner"
   :maestro/main-class convex.app.run
   :maestro/require    [:ext/tools.cli
                        :project/run]
   :maestro/root       "project/app/run"}


  :dev/app.run

  {:extra-paths ["project/app/run/src/clj/dev"]}

  ;---

  :project/break

  {:extra-paths     ["project/break/src/clj/main"
                     "project/break/src/cvx/main"]
   :maestro/doc     "Advanced generative testing against the CVM"
   :maestro/require [:project/clojurify
                     :project/cvm
                     :project/sync]
   :maestro/root    "project/break"}


  :test/break

  {:extra-paths ["project/break/src/clj/test"]}

  ;---

  :project/cvm

  {:extra-paths     ["project/cvm/src/clj/main"]
   :maestro/doc     "Handling CVM contextes and Convex data"
   :maestro/require [:ext/convex]
   :maestro/root    "project/cvm"}


  :dev/cvm

  {:extra-paths ["project/cvm/src/clj/dev"]}


  :test/cvm

  {:extra-paths ["project/cvm/src/clj/test"]}
 
  ;---

  :project/clojurify

  {:extra-paths     ["project/clojurify/src/clj/main"]
   :maestro/doc     "Writing Convex Lisp forms as Clojure data and related utilities"
   :maestro/require [:ext/test.check
                     :project/cvm]
   :maestro/root    "project/clojurify"}


  :dev/clojurify

  {:extra-paths ["project/clojurify/src/clj/dev"]}


  :test/clojurify

  {:extra-paths ["project/clojurify/src/clj/test"]}

  ;---

  :project/deploy.lab.lib.xform

  {:extra-paths     ["project/deploy/lab/lib/xform/src/cvx/main"]
   :maestro/doc     "Experimental transducer library for Convex Lisp"
   :maestro/root    "project/lab/lib/xform"
   :maestro/require [:bundle/deploy]}


  :dev/deploy.lab.lib.xform

  {:extra-paths ["project/deploy/lab/lib/xform/src/clj/dev"
                 "project/deploy/lab/lib/xform/src/cvx/dev"]}

  ;---

  :project/deploy.lib.trust

  {:extra-paths     ["project/deploy/lib/trust/src/cvx/main"]
   :maestro/doc     "Trust library for Convex Lisp"
   :maestro/require [:bundle/deploy]
   :maestro/root    "project/lib/trust"}


  :dev/deploy.lib.trust

  {:extra-paths ["project/deploy/lib/trust/src/clj/dev"]}


  :test/deploy.lib.trust

  {:extra-paths ["project/deploy/lib/trust/src/clj/test"]}

  ;---

  :project/run

  {:extra-paths     ["project/run/src/clj/main"
                     "project/run/src/cvx/main"]
   :maestro/doc     "Core implementation of `:project/app.run`, reusable interface"
   :maestro/require [:project/cvm
                     :project/sync
                     :project/watch]
   :maestro/root    "project/run"}


  :dev/run

  {:extra-paths     ["project/run/src/clj/dev"
                     "project/run/src/cvx/dev"]
   :maestro/require [:toggle/tap]}

  ;---

  :project/sync

  {:extra-paths     ["project/sync/src/clj/main"]
   :maestro/require [:project/cvm]
   :maestro/doc     "Syncing Convex Lisp code into a CVM context, reference implementation of loading files from disk"
   :maestro/root    "project/sync"}


  :dev/sync

  {:extra-paths     ["project/sync/src/clj/dev"]
   :maestro/require [:project/break]}

  ;---

  :project/watch

  {:extra-paths     ["project/watch/src/clj/main"]
   :maestro/doc     "Provides a live-reloading experience of Convex Lisp on top of `:project/sync`"
   :maestro/require [:ext/hawk
                     :project/sync]
   :maestro/root    "project/watch"}


  :dev/watch

  {:extra-paths ["project/watch/src/clj/dev"]}}}
