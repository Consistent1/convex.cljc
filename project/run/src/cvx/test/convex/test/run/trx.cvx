;;
;;
;; Testing `convex.run.trx`.
;;
;;


;;;;;;;;;;


(def T
     $.test)


;;;;;;;;;; Test suites


(defn suite.main

  ^{:doc {:description "Main test suite."}}

  []

  (T/group '[(T/path.conj 'convex.run.trx)

             ($.trx/prepend '(def foo
                                  42))

             (T/trx '(= 42
                        foo)
                    {:description "Prepend one transaction single."})

             ($.trx/precat '((def foo
                                  (inc foo))
                             (def foo
                                  (inc foo))))

             (T/trx '(= 44
                        foo)
                    {:description "Prepend a list of transactions."})

             ($.trx/set (concat '((def foo
                                       (inc foo))
                                  (def foo
                                       (inc foo)))
                                $.trx/*list*))

             (T/trx '(= 46
                        foo)
                    {:description "Emulating `precat`."})

             (T/trx '(query
                       (do
                         ($.trx/append :foo)
                         (= :foo
                            (last $.trx/*list*))))
                    {:description "Append a single transaction."})

             (T/trx '(query
                       (do
                         ($.trx/postcat '(:foo
                                          :bar))
                         (let [[& _
                                  foo
                                  bar] $.trx/*list*]
                           (and (= :foo
                                   foo)
                                (= :bar
                                   bar)))))
                    {:description "Append a list of transactions."})]))


;;;


(suite.main)
(T/print "convex.run.trx")
