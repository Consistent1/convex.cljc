

($.stream/out! (str "\033[H\033[2J"
                    "Testing"
                    $/line))



($.file/read "project/run/src/cvx/main/convex/run/test.cvx")

(eval `(def T
            (deploy (quote ~(cons 'do
                                  (next (next $/*result*)))))))



 
(T/filter.set :important?)
 
 
(T/meta.set (fn [x] (assoc x :important? true)))
 
 
(T/state.push)
 
 


(T/trx '(do
          (def baz 24)
          (< 2 5)))


(def x
     42)


;(T/trx '(T/is (< x 4)))

#_(let [a 4
      b 3]
  (T/trx `(or (< ~a ~b)
                (- ~a ~b))
         {:description "I know, it fails."}))



;(T/state.pop `(def bar ~foo))

;
;(T/fail-code #{:ASSERT}
;             '(T/is (= 1
;                       2))
;             {:description "Must fail fast."})
;


(T/print)
;
;(T/exit)
