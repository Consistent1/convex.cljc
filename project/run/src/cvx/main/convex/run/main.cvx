


(call *registry*
      (cns-update 'convex.run.main
                  *address*))


(call *registry*
      (register {:doc  {:description ""}
                 :name ""}))




(def *cycle*

  ^{:doc {:description ["Starting at 0, is incremented every time the main file is run."
                        "Potentially useful for watch mode."]}}

  0)



(def *main?*

  ^{:doc {:description ""}}

  false)



(def *watch?*

  ^{:doc {:description ""}}

  false)



(defn dep

  ^{:doc {:description ["Loads Convex Lisp dependency files. During watch mode, those files are live-reloaded as well."
                        "If used, MUST be written as the very first transaction found in the main file."
                        "Takes a map of `symbol` -> `path to file`. Files are read as lists of Convex Lisp forms and then defined under their corresponding symbol."
                        "Then, those forms can be used as needed. It is common to use `deploy` or `eval`, depending on the purpose of a given file."]
          :examples    [{:code "(sreq/dep {'my-lib \"path/to/lib.cvx\"})"}]
          :signature   [{:params [sym->file]}]
          :type        :function}}

  [sym->file]

  (assert (not "First transaction")))



(defn eval

  ^{:doc {:description ""}}

  [code]

  (if *main?*
    (fail :STATE
          "Main file already loaded")
    [:cvm.sreq :main.eval code]))



(defn load

  ^{:doc {:description ""}}

  [path]

  (if *main?*
    (fail :STATE
          "Main file already loaded")
    [:cvm.sreq :main.load path]))



(defn watch

  ^{:doc {:description ""}}

  [path]

  (if *main?*
    (fail :STATE
          "Main file already loaded")
    [:cvm.sreq :main.watch path]))
