

(call *registry*
      (cns-update 'convex.run.process
                  *address*))


(call *registry*
      (register {:doc  {:description ""}
                 :name ""}))



(defn env

  ^{:doc {:description ["Retrieves environment variable from the current process. Useful when some information must be passed to the runner from the outside."
                        "When a env variable is given as well, defines only the value for that variable"
                        "Result is temporarily stored in `env/*result* and is accessible during the next transaction."]
          :examples    [{:code "(sreq/env}"}
                        {:code "(sreq/env \"MY_X\")"}]
          :signature   [{:params [sym]}
                        {:params [sym env-var]}]
          :type        :function}}


  ([]

   (env nil))


  ([var]

   (assert (or (str? var)
               (nil? var)))
   [:cvm.sreq :process.env var]))



(defn exit

  ^{:doc {:description ["Stops execution and exits process with given `status` code (a long)."
                        "Depending on the operating system, by convention, a non-zero value means an error occured."]
          :examples    [{:code "(sreq/exit 42)"}]
          :signature   [{:params [status]}]
          :type        :function}}

  [status]

  (assert (long? status))
  [:cvm.sreq :exit status])
