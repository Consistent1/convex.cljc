(sreq/dep {test  "project/cvx/lab/lib/run/test/src/cvx/main/convex/run/test.cvx"
           xform "project/cvx/lab/lib/xform/src/cvx/main/convex/xform.cvx"})


#_
(sreq/hook.error (fn [ex]
                   (sreq/out (dissoc ex
                                     :trace))))

(eval (first xform))
(eval (first test))

(import convex.run.test :as test)
(import convex.xform :as xform)


(sreq/screen.clear)




(defn guard

  [tag+]

  (> (count (intersection tag+
                          #{:important}))
     0))


(test/trx '(< 2 5))


(test/trx '(< 42 4))
(test/trx '(> 3 4)
          {:doc "I know, it fails."})

;(sreq/hook.end '[(test/exit)])


;(sreq/out test/state)

(sreq/out \newline)


(test/print-failed)


#_
(sreq/do '[(sreq/out \newline):
           (sreq/log)
           (sreq/out [:log help/*trx.last.result*])])

