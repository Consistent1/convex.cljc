(sreq/dep {test  "project/cvx/lab/lib/run/test/src/cvx/main/convex/run/test.cvx"
           xform "project/cvx/lab/lib/xform/src/cvx/main/convex/xform.cvx"})



(sreq/hook.error (fn [ex]
                   (sreq/out (dissoc ex
                                     :trace))))

(eval (first xform))
(eval `(def test
            (deploy (quote ~(cons 'do
                                  (next (next test)))))))
                      

(import convex.xform :as xform)


(sreq/screen.clear)




(defn guard

  [tag+]

  (> (count (intersection tag+
                          #{:important}))
     0))


(test/trx '(< 2 5))


(test/trx '(< 42 4))
(let [a 4
      b 3]
  (test/trx `(or (< ~a ~b)
                 (- ~a ~b))
            {:description "I know, it fails."}))

(test/fail-code #{:ASSERT}
                '(fail :foo :bar)
                {:description "Must fail fast."})

;(sreq/hook.end '[(test/exit)])


;(sreq/out test/state)

(sreq/out \newline)


(test/print-failed)


#_
(sreq/do '[(sreq/out \newline):
           (sreq/log)
           (sreq/out [:log help/*trx.last.result*])])
