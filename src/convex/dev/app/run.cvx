(cvm.read [xform "src/convex/lib/lab/xform.cvx"]
          [store "src/convex/lib/lab/xform/store.cvx"])



(def xform
     (deploy xform))


(eval store)



(defmacro macro-out

  [x]

  `(cvm.out [:test ~x]))





(macro-out :yes!)


42

;(xform/transduce (xform/comp (xform/filter (fn [item]
;                                             (contains-key? (tag+ item)
;                                                            :fruit))))
;                 conj
;                 []
;                 inventory)



; (log :foo :bar)
; 
; (cvm.log l)
; 
; (cvm.out [:log l])


;cvm.juice.last
