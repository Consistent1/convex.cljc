;;
;;
;; Prototype for Clojure-like transducers
;;
;; https://clojure.org/reference/transducers
;;
;;

(do


  (defn map

    [f]

    (fn [rf]

      (fn
        ([]
         (rf))

        ([result]
         (rf result))

        ([acc x]
         (rf acc
             (f x)))

        ([acc x x+]
         (rf acc
             (apply f
                    x
                    x+))))))



  (defn transduce


    ([xform f coll]
     
     (transduce xform
                f
                (f)
                coll))


    ([xform f init coll]

     (let [f-2 (xform f)]
       (f-2 (reduce f-2
                    init
                    coll)))))

  ) ;; END
