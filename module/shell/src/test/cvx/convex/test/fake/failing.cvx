{}


;;;;;;;;;


(.t.def test-assert-throw

  (.t.is (fail :ASSERT-THROW
               "Thrown on purpose from assertion")))



(.t.def test-empty)



(.t.def test-ok

  (.t.is (= 4
            (+ 2 2))
         "Some message")

  (.t.is (= :a
            (first [:a]))
         "Another message"))



(.t.def test-meta

  ^:meta?

  (.t.is (< 10
            0)
         "Test with metadata"))



(.t.def test-fail


  (.t.is (= 4
            (+ 2 2))
         "Some message")

  (.t.is (= 1000
            (+ 2 2))
         "With message")

  (.t.is (< 1
            1000)))



(.t.def test-t.ex

  (.t.is (.t.ex true)
         "Not an exception")

  (.t.is (.t.ex :CODE
                (assert false))
         "Wrong code"))



(.t.def test-throw

  (.t.is (= 42
            (+ 2 2))
         "Some message")

  (defn -fail [] (fail :TEST-THROW
                       "Thrown on purpose"))

  (-fail)

  (.t.is (= :a
            (first [:a]))
         "Another message"))
