{:deps
 {com.protosens/maestro {:git/sha "b98268e8e6df2d99b9a3a1b376a8254a013c996b"
                         :git/url "https://github.com/protosens/maestro.clj.git"}}


 :paths
 ["bb"]


 :tasks
 {aliases
  {:doc      "Resolves and prints all required aliases - Takes either a root alias or a vector of root aliases and/or profiles"
   :requires ([protosens.maestro.task :as maestro.task])
   :task     (maestro.task/alias+)}

  aliases:dev

  {:doc      "Given one or several aliases in a vector, prints all aliases required for dev"
   :requires ([task])
   :task     (task/aliases-dev)}
  
  
  aliases:test

  {:doc      "Like `aliases:dev` but prints all aliases required for testing"
   :requires ([task])
   :task     (task/aliases-test true)}
  

  aliases:test:downstream

  {:doc      "Like `aliases:test` but tests all transitive modules as well"
   :requires ([task])
   :task     (task/aliases-test false)}


  build

  {:doc      "Packages the given aliases in an jar or uberjar depending on its alias data"
   :requires ([task])
   :task     (task/build nil)}


  deploy

  {:doc      "Deploy to Clojars ; needs username, filename leading to Clojars token, and alias ; see `build`"
   :requires ([task])
   :task     (task/install)}


  install

  {:doc      "Install alias to local Maven repo ; see `build`"
   :requires ([task])
   :task     (task/install)}


   lint

   {:doc      "Starts Clj-kondo on the path given as argument ; understands globs"
    :requires ([task])
    :task     (task/lint)}


   lint:import

   {:doc      "Initializes Clj-kondo and copies configuration files from dependencies ; uses classpath received as STDIN"
    :requires ([task])
    :task     (task/lint-import)}


   native:agent

   {:doc      "Starts Java command setting the native-image-agent to output tracing to './private/agent' (eg. reflection configuration for task 'native:image')"
    :requires ([task.native])
    :task     (task.native/agent)}


   native:reflect-config

   {:doc      "Copies './private/agent/reflect-config.json' to the folder given as argument after preparing it"
    :requires ([task.native])
    :task     (task.native/reflect-config)}


   native:image

   {:doc      "Builds a native image in `./private/target` from an uberjar ; requires alias that has been used to `build` the uberjar"
    :requires ([task.native])
    :task     (task.native/image)}


   pprint-cp

   {:doc      "Pretty prints the classpath read from STDIN - Great match for Clojure's `-Spath` argument"
    :requires ([protosens.maestro.task :as maestro.task])
    :task     (maestro.task/pprint-cp)}
   }}
