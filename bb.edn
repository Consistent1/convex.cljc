{:deps
 {protosens/maestro {:deps/root "module/maestro"
                     :git/sha   "aa5cb8058c734db259a2edd73dc1caf9f9cb98ea"
                     :git/url   "https://github.com/protosens/monorepo.cljc"}}


 :paths
 ["module/task/src/main/bb"]


 :tasks
 {aliases

  {:doc      "Resolves and prints all required aliases - Takes either a root alias or a vector of root aliases and/or profiles"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/task)}

  build

  {:doc      "Build the given alias"
   :requires ([protosens.maestro.plugin.build])
   :task     (protosens.maestro.plugin.build/task :task/build)}


  deploy:clojars

  {:doc      "Deploy to Clojars: <username> <path-to-token> <alias>"
   :requires ([protosens.maestro.plugin.deps-deploy])
   :task     (protosens.maestro.plugin.deps-deploy/clojars :task/deploy)}


  deploy:local

  {:doc      "Deploy alias to local Maven cache"
   :requires ([protosens.maestro.plugin.deps-deploy])
   :task     (protosens.maestro.plugin.deps-deploy/local :task/deploy)}


  dev

  {:doc      "Shortcut for starting dev mode given alias or a vector of aliases and/or profiles"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/clojure "-M"
                                        {:maestro/mode :dev})}


  expose
  
  {:doc      "Generate `deps.edn` for modules exposed as git libraries"
   :requires ([protosens.maestro.git.lib])
   :task     (protosens.maestro.git.lib/gen-deps)}


  lint

  {:doc      "Lint the repository using `clj-kondo`"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/lint)}


  lint:prepare

  {:doc      "Lints dependencies using `clj-kondo` and copy configuration files"
   :requires ([protosens.maestro.plugin.clj-kondo])
   :task     (protosens.maestro.plugin.clj-kondo/prepare)}


   native:agent

   {:doc      "Starts Java command setting the native-image-agent to output tracing to './private/agent' (eg. reflection configuration for task 'native:image')"
    :requires ([convex.task.native])
    :task     (convex.task.native/agent)}


   native:reflect-config

   {:doc      "Copies './private/agent/reflect-config.json' to the folder given as argument after preparing it"
    :requires ([convex.task.native])
    :task     (task.native/reflect-config)}


   native:image

   {:doc      "Builds a native image in `./private/target` from an uberjar ; requires alias that has been used to `build` the uberjar"
    :requires ([convex.task.native])
    :task     (convex.task.native/image)}


   pprint-cp

   {:doc      "Pretty prints the classpath read from STDIN - Great match for Clojure's `-Spath` argument"
    :requires ([protosens.maestro.classpath])
    :task     (protosens.maestro.classpath/pprint)}


   test

   {:doc     "Shortcut for testing the given alias (or vector of aliases and profiltes)"
   :requires ([protosens.maestro])
   :task     (protosens.maestro/clojure "-M"
                                        {:maestro/mode :test})}


   }}
